version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: algo-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: algo_trading
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - algo-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: algo-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - algo-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: algo-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: algo_trading
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRATION: 7d
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      JWT_REFRESH_EXPIRATION: 30d
      FRONTEND_URL: http://localhost:3000
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - /app/node_modules
      - /app/apps/api/node_modules
    networks:
      - algo-network
    command: pnpm --filter @algo-nandax/api dev

  # Next.js Web
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: algo-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
      NEXT_PUBLIC_WS_URL: http://localhost:3001
    ports:
      - '3000:3000'
    depends_on:
      - api
    volumes:
      - ./apps/web:/app/apps/web
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    networks:
      - algo-network
    command: pnpm --filter @algo-nandax/web dev

volumes:
  postgres_data:
  redis_data:

networks:
  algo-network:
    driver: bridge
